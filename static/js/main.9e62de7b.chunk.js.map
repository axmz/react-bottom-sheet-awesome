{"version":3,"sources":["components/sheet/styles.module.scss","components/sheet/index.jsx","components/sheet/useOutsideEvent.jsx","components/sheet/useHeight.jsx","components/sheet/useBodyScrollLock.jsx","components/ruler/index.jsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","MenuDrawer","ref","callback","children","draggingRef","useRef","menuRef","scrollRef","h","useState","height","setHeight","useEffect","current","clientHeight","useHeight","s","window","innerHeight","p","c","ceil","Math","min","o","dtt","r","handleMouseOver","e","disableBodyScroll","target","reserveScrollBarGap","stopPropagation","handleMouseOut","clearAllBodyScrollLocks","addEventListener","removeEventListener","useBodyScrollLock","close","handleOutsideEvent","contains","document","useSpring","config","stiff","duration","to","y","set","open","useCallback","velocity","toggleMenu","drag","useDrag","event","memo","get","first","cancel","vy","canceled","vxvy","last","my","movement","newY","scrolling","scrollable","closest","scrollTop","high","low","atTop","atBottom","scrollHeight","clamp","immediate","style","spring","div","className","styles","container","onClick","pull","id","reserve","Ruler","backgroundColor","display","alignItems","Style","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9e62de7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3zsY6\",\"pull\":\"styles_pull__oMhEj\",\"pull-line\":\"styles_pull-line__1T7lR\",\"reserve\":\"styles_reserve__14OPt\",\"scrollable\":\"styles_scrollable__2RmUW\"};","// Documentation for original menu drawer\n// https://codesandbox.io/s/react-use-gesture-sheet-fg3w0\n\nimport React, { useCallback, useRef } from \"react\";\nimport { useSpring, animated, config } from \"react-spring\";\nimport { useDrag } from \"react-use-gesture\";\nimport styles from \"./styles.module.scss\";\nimport clamp from \"lodash/clamp\";\nimport { disableBodyScroll, clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport { useHeight } from \"./useHeight\";\nimport { useOutsideEvent } from \"./useOutsideEvent\";\nimport { useBodyScrollLock } from \"./useBodyScrollLock\";\n\nconst MenuDrawer = ({ children }) => {\n  const draggingRef = useRef(true);\n  const menuRef = useRef();\n  const scrollRef = useRef();\n\n  // heights\n  const h = useHeight(menuRef)// total height of the sheet (child + pull + reserve)\n  const s = window.innerHeight // Screen height\n  const p = 2.2 * 16 // 2.2rem * 16px/rem 35.2px. Pull element\n  const r = 6 * 16;// 6rem * 16px/rem 96px. Reserve\n  const c = h - r - p; // Child height\n  const o = 500; // px custom max Open height\n  const top = p // small margin at Top when opened;\n  const ceil = Math.min(s - top, o + p, c + p); // \n  const dtt = s - ceil // distance till top\n\n  // console.log('Sheet', h)\n\n  useBodyScrollLock(menuRef)\n  useOutsideEvent(menuRef, () => close()); // check if it works\n\n  // Spring\n  const [{ y }, set] = useSpring(() => ({\n    config: { ...config.stiff, duration: 100 },\n    to: { y: h - p }\n  }), [h]);\n\n\n  const open = useCallback(() => {\n    // console.log('open')\n    draggingRef.current = false;\n    set({ y: h - ceil, config: config.stiff });\n    disableBodyScroll(menuRef.current, { reserveScrollBarGap: true });\n  }, [set, h, ceil]);\n\n\n  const close = useCallback((velocity = 0) => {\n    // console.log('close')\n    draggingRef.current = true;\n    set({ y: (h - p), config: { ...config.stiff, velocity } });\n    clearAllBodyScrollLocks();\n  }, [set, h, p]);\n\n  // Open / close menu\n  const toggleMenu = useCallback(() => {\n    // console.log('toggle')\n    if (draggingRef.current) {\n      open();\n    } else {\n      close();\n    }\n  }, [open, close]);\n\n  // Drag settings\n  const drag = useDrag(\n    ({\n      event,\n      memo = y.get(),\n      first,\n      cancel,\n      canceled,\n      vxvy: [, vy],\n      last,\n      movement: [, my],\n      scrolling\n    }) => {\n      let newY = memo + my;\n\n      if (first) {\n        draggingRef.current = true;\n        disableBodyScroll(menuRef.current);\n      } else if (last) draggingRef.current = false;\n\n      if (newY < -r) {\n        // console.log('case 1')\n        cancel();\n      }\n      if (newY < 0) {\n        // console.log('case 2')\n        newY = newY / (1 - newY * 0.5);\n      }\n      if (last) {\n        // console.log(\"case 3\")\n        const scrollable = event.target.closest(\"#scrollable\")\n        if (scrollable) {\n          ((newY > h * 0.85 || vy > 0.2) && scrollable.scrollTop < 5)  ? close(vy) : open();\n        } else {\n          (newY > h * 0.85 || vy > 0.2) ? close(vy) : open();\n        }\n      } else {\n        // console.log('case 4')\n        let high = h - p\n        let low = 0\n        if (h > s) {\n          let movement = Math.min(dtt, r)\n          low = h - ceil - movement\n        } else {\n          let movement = Math.min(dtt, r)\n          low = h - ceil - movement\n        }\n\n        const scrollable = event.target.closest(\"#scrollable\")\n        if (scrollable) {\n          const atTop = scrollable.scrollTop < 5\n          const atBottom = (scrollable.clientHeight + scrollable.scrollTop) === scrollable.scrollHeight\n          if (atTop && my > 0) {\n            set({\n              y: clamp(newY, low, high),\n              immediate: true,\n            });\n          }\n          if (atBottom && my < 0)\n          // console.log('case 5')\n            set({\n              y: clamp(newY, low, high),\n              immediate: true,\n            });\n\n        } else {\n          set({\n            y: clamp(newY, low, high),\n            immediate: true,\n          });\n        }\n\n      }\n\n      return memo;\n    }\n  );\n\n  const style = { height: `${ceil-p}px`}\n  const spring = { y }\n  // const blur = y.to([0, h], [`blur(10px)`, `blur(0px)`])\n  // const width = y.to([ceil, h-ceil+p+top], [`7rem`, `.2rem`])\n\n  return (\n    <animated.div\n      ref={menuRef}\n      className={styles.container}\n      {...drag()}\n      style={spring}\n      onClick={toggleMenu}\n    >\n      <div className={styles.pull}>\n        <div className={styles['pull-line']}/>\n      </div>\n      <div>\n        <div\n          ref={scrollRef}\n          id={\"scrollable\"}\n          className={styles.scrollable}\n          style={style}\n        >\n          {children}\n        </div>\n        <div className={styles.reserve} />\n      </div>\n    </animated.div>\n  );\n  };\n\nexport default MenuDrawer;\n","import { useEffect } from 'react'\r\n\r\nexport const useOutsideEvent = (ref, callback) => {\r\n\r\n    useEffect(() => {\r\n        const handleOutsideEvent = e => {\r\n            if (ref.current && !ref.current.contains(e.target)) {\r\n                callback();\r\n            }\r\n            //     if (menuRef.current && !menuRef.current.contains(e.target)) {\r\n            //       clearAllBodyScrollLocks(); // repeated in close()\r\n            //       close();\r\n            //     } else {\r\n            //       disableBodyScroll(menuRef.current, { reserveScrollBarGap: true });\r\n            //     }\r\n        };\r\n        document.addEventListener(\"touchstart\", handleOutsideEvent);\r\n        document.addEventListener(\"mousedown\", handleOutsideEvent);\r\n        document.addEventListener(\"scroll\", handleOutsideEvent);\r\n        return () => {\r\n            document.removeEventListener(\"touchstart\", handleOutsideEvent);\r\n            document.removeEventListener(\"mousedown\", handleOutsideEvent);\r\n            document.removeEventListener(\"scroll\", handleOutsideEvent);\r\n        };\r\n    }, [callback, ref]);\r\n};\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useHeight = (ref) => {\r\n    const [height, setHeight] = useState(5000);\r\n    useEffect(() => {\r\n        if (ref.current !== null) {\r\n            setHeight(ref.current.clientHeight);\r\n        }\r\n    }, [ref])\r\n    return height;\r\n}\r\n","import { useEffect, useRef } from 'react'\r\nimport { disableBodyScroll, clearAllBodyScrollLocks } from \"body-scroll-lock\";\r\n\r\nexport const useBodyScrollLock = (ref) => {\r\n    const r = useRef()\r\n    const handleMouseOver = e => {\r\n        // console.log('mouse over')\r\n        disableBodyScroll(e.target, { reserveScrollBarGap: true });\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const handleMouseOut = e => {\r\n        // console.log('mouse out')\r\n        clearAllBodyScrollLocks();\r\n        e.stopPropagation();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (ref.current) {\r\n            ref.current.addEventListener(\"mouseenter\", handleMouseOver);\r\n            ref.current.addEventListener(\"mouseleave\", handleMouseOut);\r\n            r.current = ref.current\r\n        }\r\n        return () => {\r\n            r.current.removeEventListener(\"mouseenter\", handleMouseOver);\r\n            r.current.removeEventListener(\"mouseleave\", handleMouseOut);\r\n        }\r\n    },[ref])\r\n\r\n    // const setRef = useCallback((node) => {\r\n    //     // cleanupt\r\n    //     if (ref.current) {\r\n    //         ref.current.removeEventListener(\"mouseenter\", handleMouseOver);\r\n    //         ref.current.removeEventListener(\"mouseleave\", handleMouseOut);\r\n    //     }\r\n\r\n    //     if (node !== null) {\r\n    //         node.addEventListener(\"mouseenter\", handleMouseOver);\r\n    //         node.addEventListener(\"mouseleave\", handleMouseOut);\r\n    //     }\r\n\r\n    //     ref.current = node\r\n    // }, [])\r\n\r\n    // return [setRef]\r\n};\r\n","import React from 'react';\r\n\r\nconst Ruler = ({style = { height: 'auto', backgroundColor: \"white\" }}) => {\r\n\r\n  return <div style={style}>\r\n    <div style={{ height: '100px', display: \"flex\", alignItems: \"flex-end\" }}>_ 100</div>\r\n    <div style={{ height: '100px', display: \"flex\", alignItems: \"flex-end\" }}>_ 200</div>\r\n    <div style={{ height: '100px', display: \"flex\", alignItems: \"flex-end\" }}>_ 300</div>\r\n    <div style={{ height: '100px', display: \"flex\", alignItems: \"flex-end\" }}>_ 400</div>\r\n    <div style={{ height: '100px', display: \"flex\", alignItems: \"flex-end\" }}>_ 500</div>\r\n    <div style={{ height: '100px', display: \"flex\", alignItems: \"flex-end\" }}>_ 600</div>\r\n    <div style={{ height: '100px', display: \"flex\", alignItems: \"flex-end\" }}>_ 700</div>\r\n    <div style={{ height: '100px', display: \"flex\", alignItems: \"flex-end\" }}>_ 800</div>\r\n    <div style={{ height: '100px', display: \"flex\", alignItems: \"flex-end\" }}>_ 900</div>\r\n    <div style={{ height: '100px', display: \"flex\", alignItems: \"flex-end\" }}>_ 1000</div>\r\n  </div>\r\n}\r\n\r\nexport default Ruler","import React from 'react';\nimport './App.css';\nimport MenuDrawer from './components/sheet'\nimport Ruler from './components/ruler'\n// import ExampleDark from './components/example-dark'\n// import ExampleLight from './components/example-light'\n// import Social from './components/example-social'\n\n// const Dev = () => {\n//   return (\n//     <>\n//       <Ruler />\n//       <MenuDrawer>\n//         <Ruler style={{ height: \"auto\", backgroundColor: \"brown\" }} />\n//       </MenuDrawer>\n//     </>\n//   )\n// }\n\nconst Style = () => {\n  return <>\n    <MenuDrawer>\n      <Ruler style={{ height: \"auto\", backgroundColor: \"transparent\" }}/>\n      {/* <Social/> */}\n      {/* <ExampleDark/> */}\n      {/* <ExampleLight/> */}\n    </MenuDrawer>\n  </>\n}\n\nfunction App() {\n  return (<Style />);\n  // return (<Dev />);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}